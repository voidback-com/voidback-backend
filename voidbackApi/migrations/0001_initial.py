# Generated by Django 5.1.1 on 2025-01-23 14:31

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="DMImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="images/dm/372dc5f5d3a1e972e1660a748ed4a4bfff4a909ba90426bcd8bd82ab6406ed84/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DMVoiceNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "voiceNote",
                    models.FileField(
                        upload_to="voiceNotes/dm/fed4ab21eb833d969aea84b277d83257752128ab9a51b7822c96b22c936b2019/"
                    ),
                ),
                ("minutes", models.BigIntegerField(default=0)),
                ("seconds", models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="PostImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="images/")),
            ],
        ),
        migrations.CreateModel(
            name="SearchQuery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query", models.TextField(unique=True)),
                ("rank", models.BigIntegerField(default=1)),
                ("object_name", models.TextField(default="explore")),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.CharField(max_length=320, unique=True)),
                ("username", models.CharField(max_length=25, unique=True)),
                ("full_name", models.CharField(max_length=128)),
                ("birth_date", models.DateField(blank=True, null=True)),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatars/"),
                ),
                ("bio", models.TextField(blank=True, max_length=1024)),
                ("site_link", models.TextField(blank=True, max_length=130)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "isVerified",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("email_verified", models.BooleanField(blank=True, default=False)),
                ("rank", models.BigIntegerField(blank=True, default=0)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AccountActiveStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_active", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataHubAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("queries_left", models.BigIntegerField(blank=True, default=10)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataHubFeedbackPoll",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ticker", models.TextField()),
                ("position", models.IntegerField(default=4)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("hash", models.TextField(unique=True)),
                (
                    "account",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="voidbackApi.datahubaccount",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataHubPositionPoll",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ticker", models.TextField()),
                ("position", models.IntegerField(default=4)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("hash", models.TextField(unique=True)),
                (
                    "account",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="voidbackApi.datahubaccount",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataHubQuery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query", models.TextField(default="none")),
                ("query_category", models.TextField(blank=True, default="symbol")),
                ("query_startDate", models.DateField()),
                ("query_endDate", models.DateField()),
                ("includes_keywords", models.JSONField()),
                ("query_results", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "account",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="voidbackApi.datahubaccount",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DirectMessageSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "archived_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="archived_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "friend",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friend",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "initiator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="initiator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Follow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("hash", models.TextField(blank=True, unique=True)),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follower",
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
                (
                    "following",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ForYou",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbols", models.JSONField()),
                ("hashtags", models.JSONField()),
                ("accounts", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Hashtag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hashtag", models.TextField(max_length=30, unique=True)),
                ("rank", models.BigIntegerField(blank=True, default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["hashtag", "rank", "created_at", "updated_at"],
                        name="voidbackApi_hashtag_58ca5e_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("isRead", models.BooleanField(blank=True, default=False, null=True)),
                ("fromAvatar", models.TextField(blank=True, null=True)),
                (
                    "avatarVerified",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("fromNameMessage", models.TextField(blank=True, null=True)),
                ("fromName", models.TextField()),
                ("body", models.TextField(blank=True, null=True)),
                ("navPath", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("icon", models.TextField(blank=True, default="notification")),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OneTimePassword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.CharField(max_length=8)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("verified", models.BooleanField(default=False)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlatformMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                ("title", models.TextField()),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("links", models.JSONField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlatformMessageImpression",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="voidbackApi.platformmessage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.JSONField()),
                ("video", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "from_mobile",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("rank", models.BigIntegerField(blank=True, default=0, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
                (
                    "hashtags",
                    models.ManyToManyField(
                        blank=True,
                        related_name="post_hashtags",
                        to="voidbackApi.hashtag",
                    ),
                ),
                (
                    "mentions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="post_mentions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="voidbackApi.post",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_image",
                        to="voidbackApi.postimage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DMMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(max_length=5000)),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("seen", models.BooleanField(blank=True, default=False)),
                ("seen_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="voidbackApi.dmimage",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sender",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session",
                        to="voidbackApi.directmessagesession",
                    ),
                ),
                (
                    "voiceNote",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="voidbackApi.dmvoicenote",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="voidbackApi.post",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PostImpression",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("impression", models.IntegerField(blank=True, default=0)),
                ("hash", models.TextField(blank=True, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_impression",
                        to="voidbackApi.post",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PostMetadata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbols", models.JSONField()),
                ("hashtags", models.JSONField()),
                ("text_sentiment", models.TextField()),
                ("partial_sentiment", models.JSONField(null=True)),
                ("text_toxicity", models.JSONField()),
                ("text", models.TextField(max_length=20000)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="voidbackApi.post",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_type", models.TextField()),
                ("object_id", models.BigIntegerField(blank=True, null=True)),
                ("object_uuid", models.TextField(blank=True, null=True)),
                ("description", models.TextField()),
                ("priority", models.IntegerField()),
                ("disturbance", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "reporter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reporter",
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resolved_by",
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResearchPaper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField(max_length=80, unique=True)),
                (
                    "thumbnail",
                    django_resized.forms.ResizedImageField(
                        crop=None,
                        force_format="PNG",
                        keep_meta=False,
                        quality=100,
                        scale=0.5,
                        size=[1280, 720],
                        upload_to="images/",
                    ),
                ),
                ("pdf", models.FileField(upload_to="pdfs/")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResearchPaperImpression",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("impression", models.IntegerField(blank=True, default=0)),
                ("hash", models.TextField(blank=True, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
                (
                    "paper",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paperImpression",
                        to="voidbackApi.researchpaper",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Symbol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.TextField(max_length=15, unique=True)),
                ("rank", models.BigIntegerField(blank=True, default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["symbol", "rank", "created_at", "updated_at"],
                        name="voidbackApi_symbol_b07cca_idx",
                    )
                ],
            },
        ),
        migrations.AddField(
            model_name="post",
            name="symbols",
            field=models.ManyToManyField(
                blank=True, related_name="post_symbols", to="voidbackApi.symbol"
            ),
        ),
        migrations.AddIndex(
            model_name="datahubaccount",
            index=models.Index(
                fields=["account", "created_at", "queries_left"],
                name="voidbackApi_account_c9aad6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="datahubfeedbackpoll",
            index=models.Index(
                fields=["account", "ticker", "position", "created_at"],
                name="voidbackApi_account_e5a25f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="datahubpositionpoll",
            index=models.Index(
                fields=["account", "ticker", "position", "created_at"],
                name="voidbackApi_account_9b5ab0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="datahubquery",
            index=models.Index(
                fields=[
                    "account",
                    "query",
                    "created_at",
                    "query_category",
                    "query_startDate",
                    "query_endDate",
                    "includes_keywords",
                    "query_results",
                ],
                name="voidbackApi_account_e4dceb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="directmessagesession",
            index=models.Index(
                fields=["initiator", "friend", "created_at"],
                name="voidbackApi_initiat_295f77_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="foryou",
            index=models.Index(
                fields=[
                    "account",
                    "symbols",
                    "hashtags",
                    "accounts",
                    "created_at",
                    "updated_at",
                ],
                name="voidbackApi_account_c33764_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["account", "isRead", "created_at"],
                name="voidbackApi_account_34a1cc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="platformmessage",
            index=models.Index(
                fields=["title", "author", "created_at", "description"],
                name="voidbackApi_title_3d18b8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="platformmessageimpression",
            index=models.Index(
                fields=["message", "account", "created_at"],
                name="voidbackApi_message_d1c5fe_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="dmmessage",
            index=models.Index(
                fields=["session", "sender", "seen", "seen_at", "sent_at"],
                name="voidbackApi_session_5da0fd_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="postimpression",
            index=models.Index(
                fields=["post", "account", "impression", "created_at", "updated_at"],
                name="voidbackApi_post_id_ef9708_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="postmetadata",
            index=models.Index(
                fields=[
                    "post",
                    "symbols",
                    "hashtags",
                    "text_sentiment",
                    "partial_sentiment",
                    "text_toxicity",
                    "text",
                ],
                name="voidbackApi_post_id_0f9f29_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=[
                    "resolved",
                    "object_type",
                    "object_id",
                    "disturbance",
                    "priority",
                    "created_at",
                    "resolved_by",
                ],
                name="voidbackApi_resolve_31290b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="researchpaper",
            index=models.Index(
                fields=["title", "author", "created_at"],
                name="voidbackApi_title_01edbc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="researchpaperimpression",
            index=models.Index(
                fields=["paper", "account", "impression", "created_at", "updated_at"],
                name="voidbackApi_paper_i_32098d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["author", "parent_post", "rank", "created_at", "updated_at"],
                name="voidbackApi_author__a9ed78_idx",
            ),
        ),
    ]
